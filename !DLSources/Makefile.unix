# Project: DeskLib
# Make: make
#
# GNU Make makefile for DeskLib. Unix make file.
#

# Defaults

# Do build against SharedCLibrary instead?
SCL ?= false

ifeq ($(SCL),true)
  SCLFLAGS=-mlibscl
  SCLNAME=-scl
  DESKLIB = $(DESKLIB_STATIC)
else
  DESKLIB = $(DESKLIB_STATIC) $(DESKLIB_SHARED)
endif

# Uncomment the following line if you have not already set GCCSDK_INSTALL_CROSSBIN
#GCCSDK_INSTALL_CROSSBIN ?= /home/riscos/cross/bin

DESKLIB_STATIC = ../!DeskLib/libDesk$(SCLNAME).a
DESKLIB_SHARED = ../!DeskLib/libDesk.so

DESKLIB_INCLUDE=$(realpath ../!DeskLib/include/)
DESKLIB_OLD_INCLUDE=$(realpath ../!DeskLib/oldinclude/)
DESKLIB_PATH=$(DESKLIB_INCLUDE)/,$(DESKLIB_OLD_INCLUDE)

libraries := $(notdir $(filter-out Libraries/.svn Libraries/h \
               Libraries/Macros.h Libraries/RegDefs.h, $(wildcard Libraries/*)))

all_objects := $(patsubst %.s,%.o,$(patsubst %.c,%.o,$(filter %.c %.s,$(wildcard Libraries/*/*))))

lib_objects := $(addprefix Libraries.,$(addsuffix .o.*, $(libraries)))

WARNINGS = -std=c99 -pedantic -Wall -Wundef -Wpointer-arith \
           -Wcast-align -Wwrite-strings -Wstrict-prototypes \
           -Wmissing-prototypes -Wmissing-declarations -Wnested-externs \
           -Winline -Wno-unused -Wno-long-long -W -Wcast-qual -Wshadow -Werror

# We do ELF based builds only
CC = $(GCCSDK_INSTALL_CROSSBIN)/arm-unknown-riscos-gcc
CFLAGS = -O2 $(WARNINGS) -std=c99 $(SCLFLAGS)

AS = $(CC)
ASFLAGS = -Wa,-ILibraries,-I$(@D) -c $(SCLFLAGS)

AR = $(GCCSDK_INSTALL_CROSSBIN)/arm-unknown-riscos-ar
ARFLAGS = rcv

# Make the library
all: $(DESKLIB)

# Link the objects together to make a new library
$(DESKLIB_STATIC): $(all_objects)
	$(AR) $(ARFLAGS) $@ $$(find | grep "\.o$$")

$(DESKLIB_SHARED): $(subst .o,.os,$(all_objects))
	$(CC) -shared -Wl,-z,defs -Wl,-h,libDesk.so -o $@ $$(find | grep "\.os$$")

# Clean the whole library out in one go
clean:
	-find | grep "\.o$$" | xargs rm 2>/dev/null || true
	-find | grep "\.os$$" | xargs rm 2>/dev/null || true
	-rm -f $(DESKLIB)

%.o: %.c
	DESKLIB_PATH=$(DESKLIB_PATH) $(CC) $(CFLAGS) -c $< -o $@

%.o: %.s
	$(AS) $(ASFLAGS) $< -o $@

%.os: %.c
	DESKLIB_PATH=$(DESKLIB_PATH) $(CC) $(CFLAGS) -c $< -o $@ -fPIC

%.os: %.s
	$(AS) $(ASFLAGS) $< -o $@ -fPIC

install: $(DESKLIB)
	mkdir -p $(GCCSDK_INSTALL_ENV)/include/DeskLib
	$(GCCSDK_INSTALL_ENV)/ro-install $(DESKLIB_INCLUDE)/*.h $(DESKLIB_OLD_INCLUDE)/*.h $(GCCSDK_INSTALL_ENV)/include/DeskLib
	mkdir -p $(GCCSDK_INSTALL_ENV)/lib
ifeq ($(SCL),true)
	$(GCCSDK_INSTALL_ENV)/ro-install $(DESKLIB_STATIC) $(GCCSDK_INSTALL_ENV)/lib/libDesk$(SCLNAME).a
else
	$(GCCSDK_INSTALL_ENV)/ro-install $(DESKLIB_STATIC) $(GCCSDK_INSTALL_ENV)/lib/libDesk.a
	$(GCCSDK_INSTALL_ENV)/ro-install $(DESKLIB_SHARED) $(GCCSDK_INSTALL_ENV)/lib/
endif
